class Solution:
    def numIslands(self, grid: List[List[str]]) -> int:
        
        if not grid:
            return 0
        
        count = 0
        
        #loop through rows
        for i in range(len(grid)):
            #loop through columns
            for j in range(len(grid[0])):
                #if you encounter a 1, jumo to dfs function
                if grid[i][j] == '1':
                    self.dfs(grid, i, j)
                    #increment the counter
                    count += 1
        return count

    def dfs(self, grid, i, j):
        ##check for bounds and that position has not been seen before
        if i<0 or j<0 or i>=len(grid) or j>=len(grid[0]) or grid[i][j] != '1':
            return
        ##mark as seen
        grid[i][j] = '#'
        ##check each row and column
        self.dfs(grid, i+1, j)
        self.dfs(grid, i-1, j)
        self.dfs(grid, i, j+1)
        self.dfs(grid, i, j-1)
