class Solution:
    def maxSubArrayLen(self, nums: List[int], k: int) -> int:
        # as hash map 
        mydict = dict() 

        # Initialize sum and maxLen with 0 
        sum = 0
        maxLen = 0

        # traverse the given array 
        for i in range(len(nums)): 

            # accumulate the sum 
            sum += nums[i] 

            # when subArray starts from index '0' 
            if (sum == k): 
                maxLen = i + 1

            # check if 'sum-k' is present in 
            # mydict or not 
            elif (sum - k) in mydict: 
                maxLen = max(maxLen, i - mydict[sum - k]) 

            # if sum is not present in dictionary 
            # push it in the dictionary with its index 
            if sum not in mydict: 
                mydict[sum] = i 

        return maxLen 
    
